{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande-Bold;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red28\green97\blue136;
\red116\green21\blue26;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c12941\c45882\c60392;
\cssrgb\c53333\c13333\c13333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1611608400000\
= 
\f1\b\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 GMT
\f2\b0 : Monday, January 25, 2021 9:00:00 PM\
\pard\pardeftab720\partightenfactor0

\f1\b \cf2 Your time zone
\f2\b0 :\'a0Monday, January 25, 2021 10:00:00 PM\'a0{\field{\*\fldinst{HYPERLINK "https://www.epochconverter.com/timezones?q=1611608400000"}}{\fldrslt \cf4 \strokec4 GMT+01:00}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
1611262800000\
\pard\pardeftab720\partightenfactor0

\f1\b\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 GMT
\f2\b0 : Thursday, January 21, 2021 9:00:00 PM\

\f1\b Your time zone
\f2\b0 :\'a0Thursday, January 21, 2021 10:00:00 PM\'a0{\field{\*\fldinst{HYPERLINK "https://www.epochconverter.com/timezones?q=1611262800000"}}{\fldrslt \cf4 \strokec4 GMT+01:00}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
1611349200000\
\pard\pardeftab720\partightenfactor0

\f1\b\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 GMT
\f2\b0 : Friday, January 22, 2021 9:00:00 PM\

\f1\b Your time zone
\f2\b0 :\'a0Friday, January 22, 2021 10:00:00 PM\'a0{\field{\*\fldinst{HYPERLINK "https://www.epochconverter.com/timezones?q=1611349200000"}}{\fldrslt \cf5 \strokec5 GMT+01:00}}\cf5 \strokec5 \

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 def format_date_for_api_call(date):\
    """\
    we support different date formats:\
    - string\
    - datetime.date\
    - datetime.datetime\
    - timestamp number\
    - pd.Timestamp\
    that gives the user the freedom to use the API in a very flexible way\
    """\
    if isinstance(date, datetime.datetime):\
        return date.date().isoformat()\
    elif isinstance(date, datetime.date):\
        return date.isoformat()\
    elif isinstance(date, str):  # string date\
        return dateutil.parser.parse(date).date().isoformat()\
    elif isinstance(date, int) or isinstance(date, float):\
        # timestamp number\
        return int(date)\
    else:\
        raise Exception(f"Unsupported date format: \{date\}")\
\
start = pytz.timezone(NY).localize(datetime(2020,1,2,9,30)).timestamp()*1000  # timestamp in micro seconds\
# another alternative will be: start = pd.Timestamp('2020-01-02 09:30', tz=NY).value/1e6\
end = pytz.timezone(NY).localize(datetime(2020,1,2,16,0)).timestamp()*1000\
df = api.polygon.historic_agg_v2('AAPL', 1, 'minute', _from=start, to=end).df\
\
timestamp is an integer in Unix Epoch nanoseconds as the lower bound filter, exclusive. timestamp_limit is an integer in Unix Epoch nanoseconds as the maximum timestamp allowed in the results.}